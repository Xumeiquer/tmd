name: Compile & Publush

on:
  push:
    branches:
      - 'main'

env:
  TMD_TARGETS: ("windows-static-x64" "linux-x64-clang")
  TDLIB_VERSION: v1.8.0

jobs:
  compile:
    name: Compile TMD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare TDLIB for Cross-Copilation
        uses: addnab/docker-run-action@v3
        with:
          image: debian:latest
          options: -v ${{ github.workspace }}/tdlib:/usr/src/tdlib
          run: |
              apt update
              apt install -y make git zlib1g-dev libssl-dev gperf php-cli cmake g++
              mkdir -p /usr/src/tdlib/
              git clone https://github.com/tdlib/td.git /usr/src/tdlib/td
              cd /usr/src/tdlib/td
              git checkout $TDLIB_VERSION
              mkdir -p /usr/src/tdlib/td/build-native
              for target in "${env.TMD_TARGETS[@]}": do
                mkdir -p /usr/src/tdlib/td/build-${target}
                chmod 777 /usr/src/tdlib/td/build-${target}
              done
              cd /usr/src/tdlib/td/build-native
              cmake -DCMAKE_BUILD_TYPE=Release ..
              cmake --build . --target prepare_cross_compiling
          env:
            DEBIAN_FRONTEND=noninteractive
      
      - name: Prepare Cross-Compilation toolschains
        run: |          
            for target in "${env.TMD_TARGETS[@]}"; do
              docker run --rm dockcross/${target} > /usr/local/bin/dockcross-${target}
              chmod +x /usr/local/bin/dockcross-${target}
              /usr/local/bin/dockcross-${target} -a "-v ${{ github.workspace }}/tdlib:/usr/src/tdlib/td -v ${{ github.workspace }}/tdlib/${target}:/opt/tdlib/${target}" bash -c "cd /usr/src/tdlib/td/build-${target} && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/opt/tdlib/${target} .. && cmake --build . --target install"
            done

